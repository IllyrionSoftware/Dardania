BRX Mac GuideLines
====================

This BRX sample is also enabled for BRX Mac build

The Xcode workspace file is ”Sample.xcworkspace" and project file is "Sample.xcodeproj”.

The project contains build configurations for Debug + Release, for BRX 19.

Currently, the COM and the GUI part of the Sample project can not yet be
compiled under Mac, related code parts are disabled by
  #ifdef _WIN32 // Windows only
  #endif

Additionally, the related .cpp and .h files are excluded from compilation,
in the Mac Xcode project.


Adopting the BRX Sample for Mac :
-----------------------------------
The main change to get the BRX project Mac-enabled :
in StdAfx.h, the Mac Platform support is provided by

  #ifndef _WIN32 // Linux,Mac
    #include "brx_platform_linux.h"
  #endif // !_WIN32

in the beginning of StdAfx.h - the only significant change.

All other usual Windows-specific code parts are managed by BRX "Platform
Emulation Layer", which provides most Windows mechanisms for Mac also :
as example, DllMain() function also operates in the expected way under
Mac environment;
same applies for "Extension DLLs" and resource handling etc.


Using this Mac sample project :
---------------------------------
You need to define environment variable BRX18_SDK_PATH="<full path to BRX 19 inc/lib folder>”.
Refer to the page below for terminal + GUI environment variables setup:
http://stackoverflow.com/questions/25385934/setting-environment-variables-via-launchd-conf-no-longer-works-in-os-x-yosemite

Important hint + tricks for Mac builds :
------------------------------------------
Compiler :
----------
Compared to usual Windows project settings, there is 1 extra folder
which needs to be included for Mac build, as "Compiler Search Folder" :
  $(BRX19_SDK_PATH)/inc/Platform/substitutes
This folder contains empty "fake" headers of most commonly used Windows
headers, to prevent heavy changes to BRX source code.
Example :
#include "atlcom.h"
would fail under Mac, but /inc/Platform/substitutes contains such an
empty ("fake") header file, to keep the compiler succeeding.

Linker :
--------
For the Linker, the static library "libdrx_entrypoint.a" needs to be
specially declared, to assure linkage and get all exports provided by "libdrx_entrypoint.a"
being re-exported from target module:
-Wl,-force_load,$BRX19_SDK_PATH/lib64/libdrx_entrypoint.a

PreCompiled Header :
--------------------
Xcode has the option to use “.pch” precompiled/prefix headers.
This sample project compiles fast both with or without using them.
Chose for your application whether to use the mechanism.

NOTE: Sample Xcode project contains a FullDebug target that is for Bricsys internal use. Fell free to remove this target from the project.

Loading “libwxSample.mrx" BRX module :
---------------------------------
After successful compilation, you will find “libwxSample.mrx" (Mac Runtime eXtension)
generated in output folder.
Use APPLOAD command or copy the module into BricsCAD program folder, and load by
  (arxload “libwxSample.mrx")
You will see a printed message in commandline listing available commands.
